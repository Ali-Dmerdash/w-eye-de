import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Page from "@/app/sign-in/[[...sign-in]]/page";
import { ClerkProvider, SignedIn, SignedOut } from "@clerk/nextjs";
import "./globals.css";
import { ThemeProvider } from "@/context/ThemeContext";
import { SidebarProvider } from "@/context/SidebarContext";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "EYIDE",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <html lang="en" suppressHydrationWarning>
        <head>
          <script
            dangerouslySetInnerHTML={{
              __html: `
                (function() {
                  try {
                    const theme = localStorage.getItem('theme');
                    if (theme === 'dark') {
                      document.documentElement.classList.add('dark');
                      document.documentElement.style.backgroundColor = '#15191c';
                      document.body.style.backgroundColor = '#15191c';
                    } else {
                      document.documentElement.classList.remove('dark');
                      document.documentElement.style.backgroundColor = '#FAFAFA';
                      document.body.style.backgroundColor = '#FAFAFA';
                    }
                  } catch (e) {}
                })();
              `,
            }}
          />
        </head>
        <body className="bg-black">
            <SignedOut>
              <Page />
            </SignedOut>
            <SignedIn>
              <ThemeProvider>
                <SidebarProvider>
                  <main>{children}</main>
                </SidebarProvider>
              </ThemeProvider>
            </SignedIn>
        </body>
      </html>
    </ClerkProvider>
  );
}
